/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import javax.swing.JOptionPane;
import model.Atletas;
import util.Arquivo;
import util.Ordenação;

/**
 *
 * @author Leonardo
 */
public class FrmPesquisa extends javax.swing.JFrame {

    /**
     * Creates new form FrmPesquisa
     */
    public FrmPesquisa() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btSair = new javax.swing.JButton();
        btBusca = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtBusca = new javax.swing.JTextArea();
        btBuubleSort = new javax.swing.JButton();
        btQuickSort = new javax.swing.JButton();
        btSelectionSort = new javax.swing.JButton();
        btInsertionSort = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        btBusca.setText("Busca");
        btBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscaActionPerformed(evt);
            }
        });

        txtBusca.setColumns(20);
        txtBusca.setRows(5);
        jScrollPane2.setViewportView(txtBusca);

        btBuubleSort.setText("BuubleSort");
        btBuubleSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuubleSortActionPerformed(evt);
            }
        });

        btQuickSort.setText("QuickSort");
        btQuickSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btQuickSortActionPerformed(evt);
            }
        });

        btSelectionSort.setText("SelectionSort");
        btSelectionSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelectionSortActionPerformed(evt);
            }
        });

        btInsertionSort.setText("Insertion Sort");
        btInsertionSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInsertionSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btQuickSort, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btSelectionSort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                        .addComponent(btBusca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSair))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btBuubleSort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btInsertionSort)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btBuubleSort)
                    .addComponent(btInsertionSort))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSair)
                    .addComponent(btBusca)
                    .addComponent(btQuickSort)
                    .addComponent(btSelectionSort))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed

        this.dispose();
    }//GEN-LAST:event_btSairActionPerformed

    private void btBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscaActionPerformed
        Arquivo arquivo =  new Arquivo();
        String argumentos = "";
        
        Atletas[] at = arquivo.Read("Atletas.dat");
        for(Atletas atleta : at){
            String aux1 =  Arrays.toString(atleta.buscaAtletas()).concat("\n");
            argumentos = argumentos.concat(aux1);
            System.out.println(argumentos);           
        }    
        txtBusca.setText(argumentos);
        System.out.println(argumentos);     
    }//GEN-LAST:event_btBuscaActionPerformed

    private void btBuubleSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuubleSortActionPerformed
       Ordenação ordem = new Ordenação();
        Arquivo arquivo =  new Arquivo();
        String aux = "";
       
       Atletas[] at = arquivo.Read("Atletas.dat");
       
        for(Atletas atleta : ordem.buubleSort(at)){
            String aux1 =  Arrays.toString(atleta.buscaAtletas()).concat("\n");
            aux = aux.concat(aux1);
            System.out.println(aux);           
        }    
        txtBusca.setText(aux);
        System.out.println(aux);
       
    }//GEN-LAST:event_btBuubleSortActionPerformed

    private void btQuickSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btQuickSortActionPerformed
        Ordenação ordem =  new Ordenação();
        Arquivo arquivo = new Arquivo();
        String aux = "";
        
        Atletas[] at = arquivo.Read("Atletas.dat");
       
        for(Atletas atleta : ordem.quicksort(at, 0, at.length)){
            String aux1 =  Arrays.toString(atleta.buscaAtletas()).concat("\n");
            aux = aux.concat(aux1);
            System.out.println(aux);           
        }    
        txtBusca.setText(aux);
        System.out.println(aux);               
    }//GEN-LAST:event_btQuickSortActionPerformed

    private void btInsertionSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInsertionSortActionPerformed
        Ordenação ordem = new Ordenação();
        Arquivo arquivo =  new Arquivo();
        String aux = "";
       
       Atletas[] at = arquivo.Read("Atletas.dat");
       
        for(Atletas atleta : ordem.insertionSort(at)){
            String aux1 =  Arrays.toString(atleta.buscaAtletas()).concat("\n");
            aux = aux.concat(aux1);
            System.out.println(aux);           
        }    
        txtBusca.setText(aux);
        System.out.println(aux);
       
    }//GEN-LAST:event_btInsertionSortActionPerformed

    private void btSelectionSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelectionSortActionPerformed
        Ordenação ordem = new Ordenação();
        Arquivo arquivo =  new Arquivo();
        String aux = "";
       
       Atletas[] at = arquivo.Read("Atletas.dat");
       
        for(Atletas atleta : ordem.SelectionSort(at, at.length)){
            String aux1 =  Arrays.toString(atleta.buscaAtletas()).concat("\n");
            aux = aux.concat(aux1);
            System.out.println(aux);           
        }    
        txtBusca.setText(aux);
        System.out.println(aux);
       
    }//GEN-LAST:event_btSelectionSortActionPerformed
    private void JTable(java.awt.event.ActionListener evt) {

     //   JTable.getModel();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPesquisa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPesquisa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPesquisa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPesquisa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPesquisa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBusca;
    private javax.swing.JButton btBuubleSort;
    private javax.swing.JButton btInsertionSort;
    private javax.swing.JButton btQuickSort;
    private javax.swing.JButton btSair;
    private javax.swing.JButton btSelectionSort;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtBusca;
    // End of variables declaration//GEN-END:variables
}
